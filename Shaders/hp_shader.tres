[gd_resource type="VisualShader" load_steps=13 format=2]

[ext_resource path="res://Resources/3d_sprites/hudbogdanoff.png" type="Texture" id=1]
[ext_resource path="res://Resources/3d_sprites/hudskull.png" type="Texture" id=2]
[ext_resource path="res://Resources/hp_noise_texture.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeScalarInterp" id=9]

[sub_resource type="VisualShaderNodeVectorInterp" id=1]

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "alpha"

[sub_resource type="VisualShaderNodeCompare" id=8]
function = 2

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out5p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out5p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Input:7
	float n_out7p0 = COLOR.a;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out5p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorDecompose:11
	float n_out11p0 = n_out6p0.x;
	float n_out11p1 = n_out6p0.y;
	float n_out11p2 = n_out6p0.z;

// Compare:8
	bool n_out8p0 = n_out7p0>n_out11p0;

// VectorMix:2
	vec3 n_out2p0 = mix(n_out3p0, n_out4p0, vec3(n_out8p0 ? 1.0 : 0.0));

// ScalarMix:13
	float n_out13p0 = mix(n_out3p1, n_out4p1, (n_out8p0 ? 1.0 : 0.0));

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -140, -7 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1120, 240 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 680, 280 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 380, 0 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 380, 240 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -220, 240 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 120, 560 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( 320, 520 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( 600, 540 )
nodes/fragment/11/node = SubResource( 6 )
nodes/fragment/11/position = Vector2( 360, 680 )
nodes/fragment/13/node = SubResource( 9 )
nodes/fragment/13/position = Vector2( 835.883, 156.28 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 4, 0, 2, 1, 2, 0, 0, 0, 11, 0, 8, 1, 7, 0, 8, 0, 8, 0, 2, 2, 6, 0, 11, 0, 5, 0, 3, 0, 5, 0, 4, 0, 5, 0, 6, 0, 3, 1, 13, 0, 4, 1, 13, 1, 8, 0, 13, 2, 13, 0, 0, 1 )
